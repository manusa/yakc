import com.marcnuri.yack.schema.api.ApiGeneratorTask
import com.marcnuri.yack.schema.model.ModelGeneratorTask

apply from: rootDir.toPath().resolve('shared.gradle').toFile()

ext {
  isPublishable = true
  pomName = 'Tekton API & Model'
  pomDescription = 'Retrofit2 based Java interfaces to create a declarative REST API client and model files for Tekton.'
}

dependencies {
  compile  project(':kubernetes-model')
  compileOnly "org.projectlombok:lombok:$version_projectlombok"
  annotationProcessor "org.projectlombok:lombok:$version_projectlombok"
}
sourceSets.main.java.srcDirs = ['src/api/java', 'src/main/java', 'src/model/java']


def templatesDirs = new File(rootProject.projectDir, "schema/templates")
def schemaDir = new File(projectDir, "schema")
def availableSchemaNames = Arrays.asList(
  "tekton-0.17.2.json"
)
def availableSchemas = availableSchemaNames.stream()
    .map { s -> new File(schemaDir, s) }
    .toArray{ i -> new File[i]}
task generateModel(type: ModelGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schemas = availableSchemas
  templatesDir = templatesDirs
  outputDirectory = projectDir
}
task generateApi(type: ApiGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schemas = availableSchemas
  templatesDir = templatesDirs
  outputDirectory = projectDir
}