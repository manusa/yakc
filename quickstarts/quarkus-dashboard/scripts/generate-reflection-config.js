#!/usr/bin/env node
const fs = require('fs')

const reflectionClasses = [
  'com.marcnuri.yakc.quickstarts.dashboard.ApiResource',
  'com.marcnuri.yakc.quickstarts.dashboard.deployment.DeploymentResource',
  'com.marcnuri.yakc.quickstarts.dashboard.events.EventResource',
  'com.marcnuri.yakc.quickstarts.dashboard.node.NodeResource',
  'com.marcnuri.yakc.quickstarts.dashboard.pod.PodResource',
  'com.marcnuri.yakc.quickstarts.dashboard.service.ServiceResource',
  'com.marcnuri.yakc.quickstarts.dashboard.watch.WatchResource',
  'com.marcnuri.yakc.config.KubeConfig',
  'com.marcnuri.yakc.config.KubeConfig$NamedCluster',
  'com.marcnuri.yakc.config.KubeConfig$Cluster',
  'com.marcnuri.yakc.config.KubeConfig$NamedContext',
  'com.marcnuri.yakc.config.KubeConfig$Context',
  'com.marcnuri.yakc.config.KubeConfig$NamedExtension',
  'com.marcnuri.yakc.config.KubeConfig$AuthInfo',
  'com.marcnuri.yakc.config.KubeConfig$NamedAuthInfo',
  'com.marcnuri.yakc.api.WatchEvent',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ControllerRevision',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ControllerRevisionList',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSet',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSetCondition',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSetList',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSetSpec',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSetStatus',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DaemonSetUpdateStrategy',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.Deployment',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DeploymentCondition',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DeploymentList',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DeploymentSpec',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DeploymentStatus',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.DeploymentStrategy',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ReplicaSet',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ReplicaSetCondition',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ReplicaSetList',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ReplicaSetSpec',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.ReplicaSetStatus',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.RollingUpdateDaemonSet',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.RollingUpdateDeployment',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSet',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSetCondition',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSetList',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSetSpec',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSetStatus',
  'com.marcnuri.yakc.model.io.k8s.api.apps.v1.StatefulSetUpdateStrategy',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Affinity',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.AttachedVolume',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.AzureDiskVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.AzureFilePersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.AzureFileVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Binding',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CSIPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CSIVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Capabilities',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CephFSPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CephFSVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CinderPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.CinderVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ClientIPConfig',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ComponentCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ComponentStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ComponentStatusList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMap',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapEnvSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapKeySelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapNodeConfigSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapProjection',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ConfigMapVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Container',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerImage',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerPort',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerState',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerStateRunning',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerStateTerminated',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerStateWaiting',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ContainerStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.DaemonEndpoint',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.DownwardAPIProjection',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.DownwardAPIVolumeFile',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.DownwardAPIVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EmptyDirVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EndpointAddress',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EndpointPort',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EndpointSubset',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Endpoints',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EndpointsList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EnvFromSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EnvVar',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EnvVarSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EphemeralContainer',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EphemeralVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Event',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EventList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EventSeries',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.EventSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ExecAction',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.FCVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.FlexPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.FlexVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.FlockerVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.GCEPersistentDiskVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.GitRepoVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.GlusterfsPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.GlusterfsVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.HTTPGetAction',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.HTTPHeader',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Handler',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.HostAlias',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.HostPathVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ISCSIPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ISCSIVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.KeyToPath',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Lifecycle',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LimitRange',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LimitRangeItem',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LimitRangeList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LimitRangeSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LoadBalancerIngress',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LoadBalancerStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LocalObjectReference',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.LocalVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NFSVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Namespace',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NamespaceCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NamespaceList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NamespaceSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NamespaceStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Node',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeAddress',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeAffinity',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeConfigSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeConfigStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeDaemonEndpoints',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeSelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeSelectorRequirement',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeSelectorTerm',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.NodeSystemInfo',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ObjectFieldSelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ObjectReference',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolume',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaim',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimTemplate',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PersistentVolumeStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Pod',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodAffinity',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodAffinityTerm',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodAntiAffinity',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodDNSConfig',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodDNSConfigOption',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodIP',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodReadinessGate',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodSecurityContext',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodTemplate',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodTemplateList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PodTemplateSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PortworxVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.PreferredSchedulingTerm',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Probe',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ProjectedVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.QuobyteVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.RBDPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.RBDVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ReplicationController',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ReplicationControllerCondition',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ReplicationControllerList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ReplicationControllerSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ReplicationControllerStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceFieldSelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceQuota',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceQuotaList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceQuotaSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceQuotaStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ResourceRequirements',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SELinuxOptions',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ScaleIOPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ScaleIOVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ScopeSelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ScopedResourceSelectorRequirement',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SeccompProfile',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Secret',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretEnvSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretKeySelector',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretProjection',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretReference',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecretVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SecurityContext',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Service',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceAccount',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceAccountList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceAccountTokenProjection',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceList',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServicePort',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceSpec',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.ServiceStatus',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.SessionAffinityConfig',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.StorageOSPersistentVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.StorageOSVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Sysctl',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.TCPSocketAction',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Taint',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Toleration',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.TopologySelectorLabelRequirement',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.TopologySelectorTerm',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.TopologySpreadConstraint',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.TypedLocalObjectReference',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.Volume',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.VolumeDevice',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.VolumeMount',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.VolumeNodeAffinity',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.VolumeProjection',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.WeightedPodAffinityTerm',
  'com.marcnuri.yakc.model.io.k8s.api.core.v1.WindowsSecurityContextOptions',

];

let content = '[';
content += reflectionClasses.map(c =>
  `{
    "name" : "${c}",
    "allDeclaredConstructors" : true,
    "allPublicConstructors" : true,
    "allDeclaredMethods" : true,
    "allPublicMethods" : true,
    "allDeclaredClasses" : true,
    "allPublicClasses" : true
  }`
).join(',');
content += ']';

fs.writeFileSync(`${__dirname}/../reflection-config.json`, content);