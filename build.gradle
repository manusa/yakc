import com.marcnuri.yack.schema.api.ApiGeneratorTask
import com.marcnuri.yack.schema.model.ModelGeneratorTask

plugins {
  id 'java-library'
  id 'jacoco'
  id 'org.sonarqube' version '2.7'
}

apply from: 'shared.gradle'

def schemaDir = new File(projectDir, "schema")
def availableSchemaNames = Arrays.asList(
//  "openshift-3.11.200.json",
  "kubernetes-1.16.0.json",
  "kubernetes-1.18.6.json",
  "kubernetes-1.19.0.json"
)
def availableSchemas = availableSchemaNames.stream()
  .map { s -> new File(schemaDir, s) }
  .toArray{ i -> new File[i]}
task generateModel(type: ModelGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schemas = availableSchemas
  templatesDir = new File(schemaDir, "templates")
  outputDirectory = new File(projectDir, "kubernetes-model")
}
task generateApi(type: ApiGeneratorTask) {
  group = 'generators'
  packageName = 'com.marcnuri.yakc'
  schemas = availableSchemas
  templatesDir = new File(schemaDir, "templates")
  outputDirectory = new File(projectDir, "kubernetes-api")
}

allprojects  {
  apply plugin: 'java-library'
  apply plugin: 'jacoco'
  afterEvaluate {
    Project evaluatedProject ->
      configurePublishing(evaluatedProject)
    }
  }

task jacocoRootReport(type: JacocoReport) {
  group = 'verification'
  dependsOn = subprojects.test
  additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
  sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
  classDirectories.setFrom files(subprojects.sourceSets.main.output)
  executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
  reports {
    xml.enabled true
    csv.enabled true
    html.enabled true
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.projectKey", "manusa_yakc"
    property "sonar.organization", "manusa-github"
    property "sonar.cpd.exclusions", "kubernetes-api/**/*,kubernetes-model/**/*"
    property "sonar.coverage.exclusions", "quickstarts/**/*"
    property "sonar.links.homepage", "https://github.com/manusa/yakc"
    property "sonar.links.ci", "https://github.com/manusa/yakc/actions"
    property "sonar.links.scm", "https://github.com/manusa/yakc"
    property "sonar.links.issue", "https://github.com/manusa/yakc/issues"
    property "sonar.coverage.jacoco.xmlReportPaths",
      file("$buildDir/reports/jacoco/jacocoRootReport/jacocoRootReport.xml").toString()
  }
}

